// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.3
// source: workqueue.proto

package workqueue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Current status of the key
type KeyState_Status int32

const (
	KeyState_UNKNOWN     KeyState_Status = 0
	KeyState_QUEUED      KeyState_Status = 1
	KeyState_IN_PROGRESS KeyState_Status = 2
	KeyState_DEAD_LETTER KeyState_Status = 3
)

// Enum value maps for KeyState_Status.
var (
	KeyState_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "QUEUED",
		2: "IN_PROGRESS",
		3: "DEAD_LETTER",
	}
	KeyState_Status_value = map[string]int32{
		"UNKNOWN":     0,
		"QUEUED":      1,
		"IN_PROGRESS": 2,
		"DEAD_LETTER": 3,
	}
)

func (x KeyState_Status) Enum() *KeyState_Status {
	p := new(KeyState_Status)
	*p = x
	return p
}

func (x KeyState_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyState_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_workqueue_proto_enumTypes[0].Descriptor()
}

func (KeyState_Status) Type() protoreflect.EnumType {
	return &file_workqueue_proto_enumTypes[0]
}

func (x KeyState_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyState_Status.Descriptor instead.
func (KeyState_Status) EnumDescriptor() ([]byte, []int) {
	return file_workqueue_proto_rawDescGZIP(), []int{3, 0}
}

type ProcessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key of the work item
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The (optional) priority of the work item, where higher numbers are processed first.
	Priority int64 `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	// The (optional) delay in second to wait before processing the work item.
	DelaySeconds int64 `protobuf:"varint,3,opt,name=delay_seconds,json=delaySeconds,proto3" json:"delay_seconds,omitempty"`
}

func (x *ProcessRequest) Reset() {
	*x = ProcessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workqueue_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRequest) ProtoMessage() {}

func (x *ProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workqueue_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRequest.ProtoReflect.Descriptor instead.
func (*ProcessRequest) Descriptor() ([]byte, []int) {
	return file_workqueue_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ProcessRequest) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *ProcessRequest) GetDelaySeconds() int64 {
	if x != nil {
		return x.DelaySeconds
	}
	return 0
}

type ProcessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional: If set, indicates the work item should be requeued after the specified delay.
	// If not set or 0, the default behavior applies (success if no error, or exponential backoff on error).
	// This field is only honored when the RPC returns successfully (no error).
	RequeueAfterSeconds int64 `protobuf:"varint,1,opt,name=requeue_after_seconds,json=requeueAfterSeconds,proto3" json:"requeue_after_seconds,omitempty"`
}

func (x *ProcessResponse) Reset() {
	*x = ProcessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workqueue_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessResponse) ProtoMessage() {}

func (x *ProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workqueue_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessResponse.ProtoReflect.Descriptor instead.
func (*ProcessResponse) Descriptor() ([]byte, []int) {
	return file_workqueue_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessResponse) GetRequeueAfterSeconds() int64 {
	if x != nil {
		return x.RequeueAfterSeconds
	}
	return 0
}

type GetKeyStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key to retrieve information for
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetKeyStateRequest) Reset() {
	*x = GetKeyStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workqueue_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyStateRequest) ProtoMessage() {}

func (x *GetKeyStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workqueue_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyStateRequest.ProtoReflect.Descriptor instead.
func (*GetKeyStateRequest) Descriptor() ([]byte, []int) {
	return file_workqueue_proto_rawDescGZIP(), []int{2}
}

func (x *GetKeyStateRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type KeyState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key name
	Key    string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Status KeyState_Status `protobuf:"varint,2,opt,name=status,proto3,enum=chainguard.workqueue.KeyState_Status" json:"status,omitempty"`
	// Priority of the key (if queued or in progress)
	Priority int64 `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	// Number of attempts made (if in progress)
	Attempts int32 `protobuf:"varint,4,opt,name=attempts,proto3" json:"attempts,omitempty"`
	// Time when the key was first queued
	QueuedTime int64 `protobuf:"varint,5,opt,name=queued_time,json=queuedTime,proto3" json:"queued_time,omitempty"`
	// Time when the key should be processed (NotBefore)
	NotBeforeTime int64 `protobuf:"varint,6,opt,name=not_before_time,json=notBeforeTime,proto3" json:"not_before_time,omitempty"`
}

func (x *KeyState) Reset() {
	*x = KeyState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workqueue_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyState) ProtoMessage() {}

func (x *KeyState) ProtoReflect() protoreflect.Message {
	mi := &file_workqueue_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyState.ProtoReflect.Descriptor instead.
func (*KeyState) Descriptor() ([]byte, []int) {
	return file_workqueue_proto_rawDescGZIP(), []int{3}
}

func (x *KeyState) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyState) GetStatus() KeyState_Status {
	if x != nil {
		return x.Status
	}
	return KeyState_UNKNOWN
}

func (x *KeyState) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *KeyState) GetAttempts() int32 {
	if x != nil {
		return x.Attempts
	}
	return 0
}

func (x *KeyState) GetQueuedTime() int64 {
	if x != nil {
		return x.QueuedTime
	}
	return 0
}

func (x *KeyState) GetNotBeforeTime() int64 {
	if x != nil {
		return x.NotBeforeTime
	}
	return 0
}

// NoRetryDetails is a marker message that indicates that the key should not be retried.
type NoRetryDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // A message describing why the key should not be retried.
}

func (x *NoRetryDetails) Reset() {
	*x = NoRetryDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workqueue_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoRetryDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoRetryDetails) ProtoMessage() {}

func (x *NoRetryDetails) ProtoReflect() protoreflect.Message {
	mi := &file_workqueue_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoRetryDetails.ProtoReflect.Descriptor instead.
func (*NoRetryDetails) Descriptor() ([]byte, []int) {
	return file_workqueue_proto_rawDescGZIP(), []int{4}
}

func (x *NoRetryDetails) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_workqueue_proto protoreflect.FileDescriptor

var file_workqueue_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x14, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x22, 0x63, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x61, 0x79,
	0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x45, 0x0a, 0x0f,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x15, 0x72, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x22, 0x26, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xa1, 0x02, 0x0a, 0x08,
	0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x2e, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x6f, 0x74,
	0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x44, 0x45, 0x41, 0x44, 0x5f, 0x4c, 0x45, 0x54, 0x54, 0x45, 0x52, 0x10, 0x03, 0x22,
	0x2a, 0x0a, 0x0e, 0x4e, 0x6f, 0x52, 0x65, 0x74, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xc7, 0x01, 0x0a, 0x10,
	0x57, 0x6f, 0x72, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x58, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x2e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x00, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2d, 0x64,
	0x65, 0x76, 0x2f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x77, 0x6f,
	0x72, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_workqueue_proto_rawDescOnce sync.Once
	file_workqueue_proto_rawDescData = file_workqueue_proto_rawDesc
)

func file_workqueue_proto_rawDescGZIP() []byte {
	file_workqueue_proto_rawDescOnce.Do(func() {
		file_workqueue_proto_rawDescData = protoimpl.X.CompressGZIP(file_workqueue_proto_rawDescData)
	})
	return file_workqueue_proto_rawDescData
}

var file_workqueue_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_workqueue_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_workqueue_proto_goTypes = []any{
	(KeyState_Status)(0),       // 0: chainguard.workqueue.KeyState.Status
	(*ProcessRequest)(nil),     // 1: chainguard.workqueue.ProcessRequest
	(*ProcessResponse)(nil),    // 2: chainguard.workqueue.ProcessResponse
	(*GetKeyStateRequest)(nil), // 3: chainguard.workqueue.GetKeyStateRequest
	(*KeyState)(nil),           // 4: chainguard.workqueue.KeyState
	(*NoRetryDetails)(nil),     // 5: chainguard.workqueue.NoRetryDetails
}
var file_workqueue_proto_depIdxs = []int32{
	0, // 0: chainguard.workqueue.KeyState.status:type_name -> chainguard.workqueue.KeyState.Status
	1, // 1: chainguard.workqueue.WorkqueueService.Process:input_type -> chainguard.workqueue.ProcessRequest
	3, // 2: chainguard.workqueue.WorkqueueService.GetKeyState:input_type -> chainguard.workqueue.GetKeyStateRequest
	2, // 3: chainguard.workqueue.WorkqueueService.Process:output_type -> chainguard.workqueue.ProcessResponse
	4, // 4: chainguard.workqueue.WorkqueueService.GetKeyState:output_type -> chainguard.workqueue.KeyState
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_workqueue_proto_init() }
func file_workqueue_proto_init() {
	if File_workqueue_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_workqueue_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workqueue_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workqueue_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetKeyStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workqueue_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*KeyState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workqueue_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*NoRetryDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_workqueue_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_workqueue_proto_goTypes,
		DependencyIndexes: file_workqueue_proto_depIdxs,
		EnumInfos:         file_workqueue_proto_enumTypes,
		MessageInfos:      file_workqueue_proto_msgTypes,
	}.Build()
	File_workqueue_proto = out.File
	file_workqueue_proto_rawDesc = nil
	file_workqueue_proto_goTypes = nil
	file_workqueue_proto_depIdxs = nil
}
